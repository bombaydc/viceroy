/* mixins */
@mixin hide-scrollbar {
	-ms-overflow-style: none;
	scrollbar-width: none;
	&::-webkit-scrollbar {
		display: none;
	}
}
@mixin custom-scrollbar {
	/* width */
	&::-webkit-scrollbar {
		width: 4px;
	}
	/* Track */
	&::-webkit-scrollbar-track {
		background-color: var(--c-scrollbar-track);
		border-radius: 50px;
	}
	/* Thumb */
	&::-webkit-scrollbar-thumb {
		background-color: var(--c-scrollbar-thumb);
		border-radius: 50px;
	}
}
@mixin sr-only {
	position: absolute;
	clip: rect(1px, 1px, 1px, 1px);
	-webkit-clip-path: inset(0px 0px 99.9% 99.9%);
	clip-path: inset(0px 0px 99.9% 99.9%);
	overflow: hidden;
	height: 1px;
	width: 1px;
	padding: 0;
	border: 0;
}
@mixin mobile-full-width {
	margin-left: calc(0px - var(--page-content-padding));
	width: calc(100% + var(--page-content-padding) * 2);
}
@mixin lineclamp($lines: 2) {
	display: -webkit-box;
	-webkit-line-clamp: $lines;
	-webkit-box-orient: vertical;
	overflow: hidden;
	text-overflow: ellipsis;
}
@mixin unset-lineclamp() {
	display: inherit;
	-webkit-line-clamp: unset;
	-webkit-box-orient: unset;
	overflow: unset;
	text-overflow: unset;
}
@mixin max-width-centered {
	width: min(var(--w-max), 100%);
	margin-inline: auto;
}
@mixin max-width-centered-with-container-padding {
	width: min(var(--w-max), 100% - var(--page-content-padding) * 2);
	margin-inline: auto;
}
@mixin focus-outline($color: black) {
	outline: 1px solid $color;
	outline-offset: 4px;
}
@mixin square($size) {
	width: $size;
	aspect-ratio: 1;
}
@mixin circle($size) {
	border-radius: 50%;
	inline-size: $size;
	block-size: $size;
	aspect-ratio: 1;
}
@mixin absolute-cover {
	position: absolute;
	inset-inline-start: 0;
	inset-block-start: 0;
	inline-size: 100%;
	block-size: 100%;
	object-fit: cover;
	object-position: top center;
}
@mixin flex-centered {
	display: flex;
	align-items: center;
	justify-content: center;
}
@mixin define-prefixed-root-variables($prefix, $map) {
	@if $prefix == "" or $prefix == null {
		@warn "No prefix provided. Variables will not be scoped.";
		@each $key, $value in $map {
			--#{$key}: #{$value};
		}
	} @else {
		@each $key, $value in $map {
			--#{$prefix}-#{$key}: #{$value};
		}
	}
}
