@use '@scss-abstracts' as *;
@use '@scss-motion-abstracts' as motion;
@use "./implementations/sample";
@use 'sass:map';

/*
* order of properties -
* 1. root variables,
* 2. layout,
* 3. size, 
* 4. spacing, 
* 5. visual (colors, backgrounds, borders, overflows),
* 6. typography,
* 7. motion,
* 8. states
*/
$core-modal-vars: (
  default: (
    //spacing - LIKELY TO CHANGE
    VIEWPORT-VERTICAL-BUFFER: 80px,
    STICKER-HEADER-PADDING: 16px 24px,
    //size - UNLIKELY TO CHANGE
    STICKER-HEADER-MIN-BLOCK-SIZE: 64px,
    FULLSCREEN-BLOCK-SIZE: 100svh,
    MEDIUM-MAX-INLINE-SIZE: 1024px,
    MEDIUM-MAX-BLOCK-SIZE: 720px,
    SMALL-MAX-INLINE-SIZE: 600px,
    SMALL-MAX-BLOCK-SIZE: 400px,
    //visual - UNLIKELY TO CHANGE
    DIALOG-BORDER-RADIUS: 12px,
    STICKY-HEADER-BG-COLOR: white,
    STICKY-HEADER-BORDER-COLOR: #e9e9e9,
    //motion - UNLIKELY TO CHANGE
    ENTRY-DURATION: var(--duration-400),
    ENTRY-EASING: var(--emphasized-decelerate),
    EXIT-DURATION: var(--duration-0),
    EXIT-EASING: var(--no-easing),
  ),
  mobile: (
    //spacing - LIKELY TO CHANGE
    STICKER-HEADER-PADDING: 16px var(--page-content-padding),
  ),
);

//core modal
.core-modal {
  //root variables - UNLIKELY TO CHANGE
  @include define-prefixed-root-variables('CORE-MODAL', map.get($core-modal-vars, default));
  @include media('<md') {
    @include define-prefixed-root-variables('CORE-MODAL', map.get($core-modal-vars, mobile));
  }

  //layout - UNLIKELY TO CHANGE
  position: fixed;
  z-index: z('modal');
  display: none;
  align-items: center;
  justify-content: center;
  inset-block-start: 0;
  inset-inline-start: 0;

  //size - UNLIKELY TO CHANGE
  inline-size: 100%;
  block-size: 100%;

  //visual - UNLIKELY TO CHANGE
  background-color: var(--c-modal-dimmer);

  //states - UNLIKELY TO CHANGE
  &.core-modal--open {
    display: flex;
    .core-modal__dialog {
      pointer-events: auto;
      animation-fill-mode: backwards;
      animation-duration: var(--CORE-MODAL-ENTRY-DURATION);
      animation-timing-function: var(--CORE-MODAL-ENTRY-EASING);
      @include motion.css-keyframes__fade-in-move-in(50px);
    }
  }
}
//dialog
.core-modal__dialog {
  //layout - UNLIKELY TO CHANGE
  position: relative;
  display: block; 
  width: 100%;

  //visual - UNLIKELY TO CHANGE
  pointer-events: none;
  overflow: hidden;
  overflow-y: scroll;
  @include hide-scrollbar;
  background-color: white;

  //mobile
  @include media('<sm') {
    //size - UNLIKELY TO CHANGE
    inline-size: 100%;
    max-block-size: unset;
    block-size: 100%;
  }
}
//sizes
.core-modal.core-modal--full {
  .core-modal__dialog {
    //size - UNLIKELY TO CHANGE
    inline-size: 100%;
    max-block-size: var(--CORE-MODAL-FULLSCREEN-BLOCK-SIZE);
    block-size: var(--CORE-MODAL-FULLSCREEN-BLOCK-SIZE);
  }
}
.core-modal.core-modal--medium {
  .core-modal__dialog {
    //size - UNLIKELY TO CHANGE
    inline-size: var(--CORE-MODAL-MEDIUM-MAX-INLINE-SIZE);
    max-block-size: min(
      var(--CORE-MODAL-MEDIUM-MAX-BLOCK-SIZE),
      100% - var(--CORE-MODAL-VIEWPORT-VERTICAL-BUFFER)
    );
    block-size: calc(100% - var(--CORE-MODAL-VIEWPORT-VERTICAL-BUFFER));
    @include media('<md') {
      max-block-size: var(--CORE-MODAL-FULLSCREEN-BLOCK-SIZE);
      block-size: var(--CORE-MODAL-FULLSCREEN-BLOCK-SIZE);
    }
    @include media('>=md') {
      //visual - UNLIKELY TO CHANGE
      border-radius: var(--CORE-MODAL-DIALOG-BORDER-RADIUS);
    }
  }
}
.core-modal.core-modal--small {
  .core-modal__dialog {
    //size - UNLIKELY TO CHANGE
    inline-size: var(--CORE-MODAL-SMALL-MAX-INLINE-SIZE);
    max-block-size: min(
      var(--CORE-MODAL-SMALL-MAX-BLOCK-SIZE),
      100% - var(--CORE-MODAL-VIEWPORT-VERTICAL-BUFFER)
    );
    block-size: calc(100% - var(--CORE-MODAL-VIEWPORT-VERTICAL-BUFFER));
    @include media('<md') {
      max-block-size: var(--CORE-MODAL-FULLSCREEN-BLOCK-SIZE);
      block-size: var(--CORE-MODAL-FULLSCREEN-BLOCK-SIZE);
    }
    @include media('>=md') {
      //visual - UNLIKELY TO CHANGE
      border-radius: var(--CORE-MODAL-DIALOG-BORDER-RADIUS);
    }
  }
}
.core-modal.core-modal {
  //Align
  &--start {
    align-items: flex-start;
  }
  &--bottom {
    align-items: flex-end;
  }
  //   side
  &--left {
	justify-content: flex-start;
  }
  &--right {
	justify-content: flex-end;
  }
}

//header
.core-modal__header {
  //layout - UNLIKELY TO CHANGE
  position: sticky;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: space-between;
  inset-block-start: 0;
  inset-inline-start: 0;

  //size - UNLIKELY TO CHANGE
  inline-size: 100%;
  min-block-size: var(--CORE-MODAL-STICKER-HEADER-MIN-BLOCK-SIZE);

  //spacing - LIKELY TO CHANGE
  padding: var(--CORE-MODAL-STICKER-HEADER-PADDING);

  //visual - UNLIKELY TO CHANGE
  background-color: var(--CORE-MODAL-STICKY-HEADER-BG-COLOR);
  border-block-end: 1px solid var(--CORE-MODAL-STICKY-HEADER-BORDER-COLOR);
}
//dialog inner
.core-modal__dialog-inner {
  //size - UNLIKELY TO CHANGE
  inline-size: 100%;
  block-size: 100%;

  //visual - UNLIKELY TO CHANGE
  overflow: hidden;
  overflow-y: scroll;
  @include hide-scrollbar;
}
.core-modal__trigger{
  width: fit-content;
}