@use '@scss-abstracts' as *;
@use '@scss-motion-abstracts' as motion;
@use 'sass:map';
@use './adpdated';

/*
* order of properties -
* 1. root variables,
* 2. layout,
* 3. size, 
* 4. spacing, 
* 5. visual (colors, backgrounds, borders, overflows),
* 6. typography,
* 7. motion,
* 8. states
*/
$core-breadcrumbs-vars: (
  default: (
    //size - LIKELY TO CHANGE
    ARROW-SIZE: var(--size-2xs),
  ),
);
.core-breadcrumbs {
  //root - UNLIKELY TO CHANGE
  @include define-prefixed-root-variables(
    'CORE-BREADCRUMBS',
    map.get($core-breadcrumbs-vars, default)
  );

  //list
  &__list {
    //layout - UNLIKELY TO CHANGE
    display: flex;

    //spacing - UNLIKELY TO CHANGE
    padding-inline-end: var(--grid-column-gap);
  }
  &:not([state='collapsed']) .core-breadcrumbs__list {
    flex-wrap: wrap;
  }
  &__list-item {
    //layout - UNLIKELY TO CHANGE
    display: inline-flex;
    &:not(:last-child) {
      //layout - UNLIKELY TO CHANGE
      flex-shrink: 0;
      display: flex;
      align-items: center;

    //   &::after {
    //     //layout - UNLIKELY TO CHANGE
    //     display: inline-block;

    //     //size - LIKELY TO CHANGE
    //     width: var(--CORE-BREADCRUMBS-ARROW-SIZE);
    //     height: var(--CORE-BREADCRUMBS-ARROW-SIZE);

    //     //visual - LIKELY TO CHANGE
    //     content: ''; 
    //     background-size: contain;
    //     background-position: center;
    //   }
    }
  }
  &__crumb {
    //layout - UNLIKELY TO CHANGE
    display: inline-block;

    //states - UNLIKELY TO CHANGE
    &[disabled] {
      pointer-events: none;
    }
  }
  &[state='collapsed'] {
    @include media('<sm') {
      //not the last child, not the second last child, not the expand btn
      .core-breadcrumbs__list-item:not(:last-child):not(:nth-last-child(2)):not(
          .core-breadcrumbs__expand-btn
        ) {
        display: none;
      }
    }
  }
}
